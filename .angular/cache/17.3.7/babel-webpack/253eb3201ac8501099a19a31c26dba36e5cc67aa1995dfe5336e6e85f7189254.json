{"ast":null,"code":"import { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { ConfirmComponent } from './confirm.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nexport class ConfirmService {\n  constructor(modalService) {\n    this.modalService = modalService;\n    this.subject = new Subject();\n  }\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnInit() {\n    this.bsModalRef = new BsModalRef();\n  }\n  confirmThis(message, siFn, noFn) {\n    this.setConfirmation(message, siFn, noFn);\n  }\n  setConfirmation(message, siFn, noFn) {\n    this.bsModalRef = this.modalService.show(ConfirmComponent);\n    const that = this;\n    this.subject.next({\n      type: 'confirm',\n      text: message,\n      siFn: function () {\n        that.subject.next();\n        // this will close the modal\n        siFn();\n        that.ngOnDestroy();\n      },\n      noFn: function () {\n        that.subject.next();\n        noFn();\n        that.ngOnDestroy();\n      }\n    });\n  }\n  getMessage() {\n    return this.subject.asObservable();\n  }\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnDestroy() {\n    setTimeout(() => this.bsModalRef.hide(), 1000);\n  }\n  static #_ = this.ɵfac = function ConfirmService_Factory(t) {\n    return new (t || ConfirmService)(i0.ɵɵinject(i1.BsModalService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ConfirmService,\n    factory: ConfirmService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BsModalRef","Subject","ConfirmComponent","ConfirmService","constructor","modalService","subject","ngOnInit","bsModalRef","confirmThis","message","siFn","noFn","setConfirmation","show","that","next","type","text","ngOnDestroy","getMessage","asObservable","setTimeout","hide","_","i0","ɵɵinject","i1","BsModalService","_2","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\app-mkt-place\\frontend-ap-marketing-place\\src\\app\\components\\confirm\\confirm.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { ConfirmComponent } from './confirm.component';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfirmService {\r\n  private subject = new Subject<any>();\r\n  constructor(public modalService: BsModalService) { }\r\n\r\n  private bsModalRef: BsModalRef;\r\n\r\n  // tslint:disable-next-line:use-life-cycle-interface\r\n  ngOnInit() {\r\n    this.bsModalRef = new BsModalRef();\r\n  }\r\n\r\n  public confirmThis(message: string, siFn: () => void, noFn: () => void) {\r\n    this.setConfirmation(message, siFn, noFn);\r\n  }\r\n\r\n  public setConfirmation(message: string, siFn: () => void, noFn: () => void) {\r\n    this.bsModalRef = this.modalService.show(ConfirmComponent);\r\n    const that = this;\r\n    this.subject.next({\r\n      type: 'confirm',\r\n      text: message,\r\n      siFn: function () {\r\n        that.subject.next();\r\n        // this will close the modal\r\n        siFn();\r\n        that.ngOnDestroy();\r\n      },\r\n      noFn: function () {\r\n        that.subject.next();\r\n        noFn();\r\n        that.ngOnDestroy();\r\n      },\r\n    });\r\n  }\r\n\r\n  public getMessage(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  // tslint:disable-next-line:use-life-cycle-interface\r\n  public ngOnDestroy() {\r\n    setTimeout(() => this.bsModalRef.hide(), 1000);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAASA,UAAU,QAAwB,qBAAqB;AAChE,SAAqBC,OAAO,QAAQ,MAAM;AAC1C,SAASC,gBAAgB,QAAQ,qBAAqB;;;AAKtD,OAAM,MAAOC,cAAc;EAEzBC,YAAmBC,YAA4B;IAA5B,KAAAA,YAAY,GAAZA,YAAY;IADvB,KAAAC,OAAO,GAAG,IAAIL,OAAO,EAAO;EACe;EAInD;EACAM,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAG,IAAIR,UAAU,EAAE;EACpC;EAEOS,WAAWA,CAACC,OAAe,EAAEC,IAAgB,EAAEC,IAAgB;IACpE,IAAI,CAACC,eAAe,CAACH,OAAO,EAAEC,IAAI,EAAEC,IAAI,CAAC;EAC3C;EAEOC,eAAeA,CAACH,OAAe,EAAEC,IAAgB,EAAEC,IAAgB;IACxE,IAAI,CAACJ,UAAU,GAAG,IAAI,CAACH,YAAY,CAACS,IAAI,CAACZ,gBAAgB,CAAC;IAC1D,MAAMa,IAAI,GAAG,IAAI;IACjB,IAAI,CAACT,OAAO,CAACU,IAAI,CAAC;MAChBC,IAAI,EAAE,SAAS;MACfC,IAAI,EAAER,OAAO;MACbC,IAAI,EAAE,SAAAA,CAAA;QACJI,IAAI,CAACT,OAAO,CAACU,IAAI,EAAE;QACnB;QACAL,IAAI,EAAE;QACNI,IAAI,CAACI,WAAW,EAAE;MACpB,CAAC;MACDP,IAAI,EAAE,SAAAA,CAAA;QACJG,IAAI,CAACT,OAAO,CAACU,IAAI,EAAE;QACnBJ,IAAI,EAAE;QACNG,IAAI,CAACI,WAAW,EAAE;MACpB;KACD,CAAC;EACJ;EAEOC,UAAUA,CAAA;IACf,OAAO,IAAI,CAACd,OAAO,CAACe,YAAY,EAAE;EACpC;EAEA;EACOF,WAAWA,CAAA;IAChBG,UAAU,CAAC,MAAM,IAAI,CAACd,UAAU,CAACe,IAAI,EAAE,EAAE,IAAI,CAAC;EAChD;EAAC,QAAAC,CAAA,G;qBA1CUrB,cAAc,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd1B,cAAc;IAAA2B,OAAA,EAAd3B,cAAc,CAAA4B,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}